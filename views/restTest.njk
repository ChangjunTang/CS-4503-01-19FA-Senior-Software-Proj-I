{% extends "centered_content.njk" %}

{% block head %}
{{ super() }}
<meta name="csrf-token" content="{{ csrfToken }}">
{% endblock %}

{% block main %}
<div>
    <div id="passwords">
        
    </div>
    <button id='addPasswordButton' type="button" class="btn btn-primary">+</button>
</div>
<script nonce={{ nonce }}>
csrfToken = document
    .querySelector('meta[name="csrf-token"]')
    .getAttribute('content');

async function fetchPasswords() {
    document.querySelector('#passwords').innerHTML = `
        <table class="table">
            <thead class="thead-dark">
                <tr>
                <th scope="col">Title</th>
                <th scope="col">Username</th>
                <th scope="col">Password</th>
                <th scope="col">Delete?</th>
                </tr>
            </thead>
        </table>
    `;

    let res = await fetch('/api/v1/passwords', {
        headers: {
            'CSRF-Token': csrfToken
        },
    });
    res = await res.json();

    if(res.error || !res.data.items) {
        return;
    }

    let html = '';

    for(let entry of res.data.items) {
        html += `
            <tr class="entry">
                <td class="title">${entry.title}</td>
                <td class="username">${entry.storedUsername}</td>
                <td class="password">${entry.storedPassword}</td>
                <td><button class="delete">Delete</button></td>
            </tr>
        `;
    }

    document.querySelector('#passwords tr').insertAdjacentHTML('afterend', html);
    setupDelete();
}

function setupDelete() {
    for(let entry of document.querySelectorAll('.entry')) {
        const btn = entry.querySelector('.delete');
        btn.addEventListener('click', async function(e) {
            const title = entry.querySelector('.title').innerHTML
            const username = entry.querySelector('.username').innerHTML;
            await deleteEntry(title, username);
            fetchPasswords();
        });
    }
}

function deleteEntry(title, username) {
    const body = new URLSearchParams();
    body.append('title', title);
    body.append('username', username);

    return fetch('/api/v1/passwords', {
        method: 'delete',
        body,
        headers: {
            'CSRF-Token': csrfToken
        },
    });
}

fetchPasswords();

</script>


<div class="modal" tabindex="-1" role="dialog" id="addPasswordModal" aria-labelledby="addPasswordModalLabel" aria-hidden="true">
    <div class="modal-content">
        <div class="modal-header">
            <h2 id='addPasswordModalLabel'>Add a Password</h2>
        </div>
        <div class="modal-body">
            <form id="addPassword">
                <label>Title:</label>
                <input id='modalTitle' type="text" name="title" class="form-control"></input>
                <label>Username:</label>
                <input id='modalUser' type="text" name="username" class="form-control"></input>
                <div class="card">
                    <div class="card-header">Password:</div>
                    <input id='slider' type="range" value='12' min="6" max="32" step="1" list="steplist" class="custom-range">
                    <div id='text'>Length: 12

                    </div>
                    <div>
                        <input class="form-check-input" id='num' checked type='checkbox'>
                        Numbers
                    </div>
                    <div>
                        <input class="form-check-input" id='spec' checked type='checkbox'>
                        Special Characters
                    </div>
                    <br>
                </div>
                <input id='modalPass' type="text" name="password" class="form-control"></input>
                <input id='submitModal' type="submit" name="submit" class="btn btn-primary"></input>
            </form>
        </div>
        <div class="modal-footer">

        </div>
    </div>
</div>

<span id="addPasswordError"></span>
<script nonce={{ nonce }}>
document.forms[0].submit.addEventListener('click', async function(e) {
    e.preventDefault();

    const body = new URLSearchParams();
    for(let input of document.forms[0].elements) {
        body.append(input.name, input.value);
    }

    let res = await fetch('/api/v1/passwords', {
        method: 'post',
        body,
        headers: {
            'CSRF-Token': csrfToken
        },
    });

    res = await res.json();

    if(res.error) {
        document.querySelector('#addPasswordError').innerHTML = res.error.message;
    }
    else {
        document.querySelector('#addPasswordError').innerHTML = "";
        fetchPasswords();
    }
});

document.addEventListener('DOMContentLoaded', function () {
    document.getElementById('addPasswordButton')
        .addEventListener('click', function doThings() { 
            generatePassword($("#slider").val());
            $('#addPasswordModal').modal('show');
            
        });
    document.getElementById('submitModal')
    .addEventListener('click', function doThings() {
            $('#addPasswordModal').modal('hide');
            document.getElementById("modalTitle").value = "";
            document.getElementById("modalUser").value = "";
            document.getElementById("modalPass").value = "";
        });
});

$(document).ready(function() {

  var prevLen = 12;
  generatePassword($("#slider").val());

    $('#addPasswordModal').on('hidden.bs.modal', function () {
        document.getElementById("modalTitle").value = "";
        document.getElementById("modalUser").value = "";
        document.getElementById("modalPass").value = "";
    });

  $("#slider").on("mousemove mouseup", function() {
    var length = $(this).val();
    $("#text").text("Length: " + length);
    if (prevLen != length) {
      generatePassword(length);
      prevLen = length;
    }
  });
  $("#num").on("mouseup", function() {
    if (!$("#num").prop('checked')) {
      nums = true;
    } else {
      nums = false;
    }
    generatePassword(prevLen);
  });
  $("#spec").on("mouseup", function() {
    if (!$("#spec").prop('checked')) {
      specs = true;
    } else {
      specs = false;
    }
    generatePassword(prevLen);
  });
});

var Password = {

  _getRandomByte: function() {
    // http://caniuse.com/#feat=getrandomvalues
    if (window.crypto && window.crypto.getRandomValues) {
      var result = new Uint8Array(1);
      window.crypto.getRandomValues(result);
      return result[0];
    } else if (window.msCrypto && window.msCrypto.getRandomValues) {
      var result = new Uint8Array(1);
      window.msCrypto.getRandomValues(result);
      return result[0];
    } else {
      return Math.floor(Math.random() * 256);
    }
  },

  generate: function(length) {
    return Array.apply(null, {
        'length': length
      })
      .map(function() {
        var result;
        while (true) {
          result = String.fromCharCode(this._getRandomByte());
          if (_pattern.test(result)) {
            return result;
          }
        }
      }, this)
      .join('');
  }

};

function scorePassword(pass) {
  var score = 0;
  if (!pass)
    return score;

  // award every unique letter until 5 repetitions
  var letters = new Object();
  for (var i = 0; i < pass.length; i++) {
    letters[pass[i]] = (letters[pass[i]] || 0) + 1;
    score += 7.0 / letters[pass[i]];
  }

  // bonus points for mixing it up
  var variations = {
    digits: /\d/.test(pass),
    lower: /[a-z]/.test(pass),
    upper: /[A-Z]/.test(pass),
    nonWords: /\W/.test(pass),
  }

  variationCount = 0;
  for (var check in variations) {
    variationCount += (variations[check] == true) ? 1 : 0;
  }
  score += (variationCount - 1) * 10;

  return parseInt(score);
}

function checkPassStrength(pass) {
  var score = scorePassword(pass);
  return score;
}

var nums = true;
var specs = true;
var _pattern = /[a-zA-Z]/;

function generatePassword(len) {

  if (specs == false && nums == false) {
    _pattern = /[a-zA-Z]/;
  }
  if (specs == false && nums == true) {
    _pattern = /[a-zA-Z0-9]/;
  }
  if (specs == true && nums == false) {
    _pattern = /[a-zA-Z!\@\#\$\%\^\&\*\.\?\-\_\+]/;
  }
  if (specs == true && nums == true) {
    _pattern = /[a-zA-Z0-9!\@\#\$\%\^\&\*\.\?\-\_\+]/;
  }

  $("#modalPass").val(Password.generate(len));

  var pass = $("#modalPass").val();

}

</script>

{% endblock %}